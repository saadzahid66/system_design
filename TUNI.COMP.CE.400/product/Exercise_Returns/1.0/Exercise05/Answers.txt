INCLUDE ANSWERS IN HERE

SOME OF THE QUESTIONS AND ANSWERS ARE FAIRLY SPECULATIVE, AS THE SYSTEM IS
ESSENTIALLY A GREYBOX: THERE ARE DIAGRAMS, SPECIFICATIONS, AND KNOWN PRACTICES,
BUT THE PRECISE IMPLEMENTATION IS OBSCURE.

*** TRANSFER RATES ***

1. Insert all benchmarking results here.

	# Meas. #### WRITING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s) 
	#  1    #  8 BIT LOCAL ARRAY:           196.69                        -  
	#  2    # 16 BIT LOCAL ARRAY:           633.10                        -  
	#  3    # 32 BIT LOCAL ARRAY:          1103.46                        -  
	#  4    #  8 BIT ONCHIP ON FPGA:          6.66                      47.42
	#  5    # 16 BIT ONCHIP ON FPGA:         13.43                     143.61
	#  6    # 32 BIT ONCHIP ON FPGA:         26.47                     192.90
	#  7    #  8 BIT MAPPED ARRAY:            8.84                     179.35
	#  8    # 16 BIT MAPPED ARRAY:           17.78                     222.58
	#  9    # 32 BIT MAPPED ARRAY:           61.70                     177.64
	#  10   # 64 BIT DMA WRITER:               -                       408.60
	# Meas. #### READING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s)
	#  11   #  8 BIT LOCAL ARRAY:           209.45                        -  
	#  12   # 16 BIT LOCAL ARRAY:           322.83                        -  
	#  13   # 32 BIT LOCAL ARRAY:           410.75                        -  
	#  14   #  8 BIT ONCHIP ON FPGA:          7.32                      55.68
	#  15   # 16 BIT ONCHIP ON FPGA:         14.37                      93.36
	#  16   # 32 BIT ONCHIP ON FPGA:         28.82                     125.68
	#  17   #  8 BIT MAPPED ARRAY:            7.42                      95.62
	#  18   # 16 BIT MAPPED ARRAY:           14.83                     122.07
	#  19   # 32 BIT MAPPED ARRAY:           29.56                     131.57
	#  20   # 64 BIT DMA READER:               -                       366.44


2. How fast were the DMA write and read measured by the application and how fast were they actually (show calculations and differences)? Give a reason for this?

	CLOCK: 100 MHz --> PERIOD: 1e-8 s
	TOTAL TO WRITE/READ: 64*64 = 4096 bytes

	WRITE ON SIGNAL TAP: 32
	TIME TO WRITE: 32 * 1e-8 = 3.2 * 10e-7 s
	MEASUREMENT: 4096 / (3.2 * 10e-7) = 1280 MB/s
	APPLICATION MEASUREMENT: 410 MB/s
	DIFFERENCE TO APPLICATION MEASUREMENT: 1280 - 410 = 870 MB/s 

	READ ON SIGNAL TAP: 32
	TIME TO READ: 32 * 1e-8 = 3.2 * 10e-7 s
	MEASUREMENT: 4096 / (3.2 * 10e-7) = 1280 MB/s
	APPLICATION MEASUREMENT: 370 MB/s
	DIFFERENCE TO APPLICATION MEASUREMENT: 1280 - 370 = 910 MB/s 
	
	REASON: The difference is very important for both measurements. This is due to the lack of precision for the time measurement in the application. Indeed the time is measured using a polling operation that could not arrived at the exact clock time of the event. 

3. Did you mark the measurement points to the hardware designs as instructed?
Yes

*** MEMORY ***

4. How much memory the operating system on ARM sees available? How much the ARM processor really has?

	MEMORY FOR ARM: 1 GiB
	MEMORY FOR OPERATING SYSTEM: 756 MB

*** MIPS ***

5. What was the calculated MIPS of the FPGA and the virtual machine CPU?
INSERT THE COMPLETE CALCULATIONS! TELL THE USED FREQUENCY OF THE CPU!

	FPGA MIPS:
	VIRTUAL MACHINE CPU MIPS:

6. What was the measured MIPS of the ARM CPU and the virtual machine CPU?

	MEASURED ARM MIPS:
	MEASURED VIRTUAL MACHINE CPU MIPS:

7. For CPUs, MIPS was measured in this exercise. Why this gives us a value differing from calculated MIPS?

8. What is probably the most important thing that the used MIPS measurements did not take into account?
HINT: We told you the answer in the instructions, but we are just making sure you understand.

*** SPECULATIVE FRAME RATE ***

9. How much were the speculative frame rates?
INSERT THE COMPLETE CALCULATIONS! TELL THE USED FRAME RATE!

	HARDWARE ACCELERATED FPS:
	PURE SOFTWARE FPS:

10. Why did we assume that roughly 60% of the execution was on the FPGA rather than the ARM CPU?
HINT: Look at the profiling results of exercise 1, or instructions of exercise 3.
	
*** BOGOMIPS ***

11. What was the BogoMIPS of the ARM CPU andthe virtual machine CPU?

	ARM BOGO MIPS:
	VIRTUAL MACHINE BOGO MIPS:
	
12. Why BogoMIPS is not so good measurement for performance? Find out if you do not know.
	
*** KVAZAAR ON ARM ***
	
13. What was the processor utilization percentage and the memory usage of Kvazaar?

	PROCESSOR UTILIZATION:
	MEMORY USAGE:

14. How Kvazaar performed on the ARM CPU in comparison to work station? Do the profiling pictures look similar?
HINT: Compare the FPS to earlier exercises, since the CPU times are not comparable because of the frame limit.

	NON-PROFILING FPS:
	DIFFERENCE TO WORKSTATION: ( NON-PROFILING FPS / WORKSTATION FPS ) = ?
	PROFILING FPS:
	ANALYSIS ON PICTURES:

15. How Kvazaar performed in comparison to the speculated software frame rate? What could be a reason for the difference?

	NON-PROFILING FPS:
	SPECULATED PURE SOFTWARE FPS:
	REASON:

16. What was hard? What was easy?

17. Fill the used hours below, including answering questions and any downtime:

	GROUP MEMBER 1:
	GROUP MEMBER 2:
